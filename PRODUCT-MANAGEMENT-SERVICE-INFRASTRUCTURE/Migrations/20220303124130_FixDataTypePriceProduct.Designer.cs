// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PRODUCT_MANAGEMENT_SERVICE_INFRASTRUCTURE.Models;

#nullable disable

namespace PRODUCT_MANAGEMENT_SERVICE_INFRASTRUCTURE.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220303124130_FixDataTypePriceProduct")]
    partial class FixDataTypePriceProduct
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PRODUCT_MANAGEMENT_SERVICE_DOMAIN.Entities.Category.CategoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<string>("TAG")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("tag");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("PRODUCT_MANAGEMENT_SERVICE_DOMAIN.Entities.Category.CategoryProductEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("product_id");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ProductId");

                    b.ToTable("CategoryProductEntity");
                });

            modelBuilder.Entity("PRODUCT_MANAGEMENT_SERVICE_DOMAIN.Entities.Product.ProductEntity", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Identify")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Identify");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("RegistredDate")
                        .HasColumnType("DATETIME");

                    b.HasKey("ID");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("PRODUCT_MANAGEMENT_SERVICE_DOMAIN.Entities.Product.ProductHistoryEntity", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ID");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductHistoryEntity");
                });

            modelBuilder.Entity("PRODUCT_MANAGEMENT_SERVICE_DOMAIN.Entities.User.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("lastname");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("password");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("User");
                });

            modelBuilder.Entity("PRODUCT_MANAGEMENT_SERVICE_DOMAIN.Entities.Category.CategoryProductEntity", b =>
                {
                    b.HasOne("PRODUCT_MANAGEMENT_SERVICE_DOMAIN.Entities.Category.CategoryEntity", "Category")
                        .WithMany("CategoryProduct")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRODUCT_MANAGEMENT_SERVICE_DOMAIN.Entities.Product.ProductEntity", "Product")
                        .WithMany("CategoryProduct")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PRODUCT_MANAGEMENT_SERVICE_DOMAIN.Entities.Product.ProductHistoryEntity", b =>
                {
                    b.HasOne("PRODUCT_MANAGEMENT_SERVICE_DOMAIN.Entities.Product.ProductEntity", "Product")
                        .WithMany("ProductHistory")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PRODUCT_MANAGEMENT_SERVICE_DOMAIN.Entities.Category.CategoryEntity", b =>
                {
                    b.Navigation("CategoryProduct");
                });

            modelBuilder.Entity("PRODUCT_MANAGEMENT_SERVICE_DOMAIN.Entities.Product.ProductEntity", b =>
                {
                    b.Navigation("CategoryProduct");

                    b.Navigation("ProductHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
